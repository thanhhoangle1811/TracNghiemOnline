<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true">
		<intercept-url pattern="/admin**" access="ROLE_ADMIN" />
		<intercept-url pattern="/user**"
			access="ROLE_ADMIN, ROLE_USER" />
			
		<access-denied-handler error-page="/general/403.html" />
		<form-login login-page="/general/login.html" 
			default-target-url="/category/index.html"
			authentication-failure-url="/general/login.html?error"
			username-parameter="email" 
			password-parameter="password" />
		<logout logout-success-url="/general/login.html?logout" />
		
	</http>
	
	<beans:bean id="passwordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
            <beans:constructor-arg name="strength" value="12" />
    </beans:bean>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="
		     SELECT EMAIL, PASSWORD, CASE ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'ENABLED' 
		     FROM ACCOUNT 
		     WHERE EMAIL=?;"
				authorities-by-username-query="
		    SELECT u.EMAIL, r.NAME 
			FROM ACCOUNT u, ACCOUNTROLE ur, ROLE r
			WHERE u.ID = ur.ACCOUNTID and r.ID=ur.ROLEID
			AND u.EMAIL=? and ur.ENABLE=1;" />
			
			<password-encoder ref="passwordEncoder" />
			
		</authentication-provider>
	
	</authentication-manager>

</beans:beans>